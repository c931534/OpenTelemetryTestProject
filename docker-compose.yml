version: '3.9'

services:
  service-a:
    build: ./service-a
    ports:
      - "5001:80"
    environment:
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      - service-b
      - service-c
      - service-d
      - collector
      - jaeger
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 5s
      timeout: 2s
      retries: 5

  service-b:
    build: ./service-b
    ports:
      - "5002:80"
    environment:
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      - collector
      - jaeger
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 5s
      timeout: 2s
      retries: 5

  service-c:
    build: ./service-c
    ports:
      - "5003:80"
    environment:
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      - collector
      - jaeger
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 5s
      timeout: 2s
      retries: 5

  service-d:
    build: ./service-d
    ports:
      - "5004:80"
    environment:
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      - collector
      - jaeger
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 5s
      timeout: 2s
      retries: 5

  service-e:
    build: ./service-e
    ports:
      - "5005:80"
    environment:
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      - service-b
      - service-c
      - service-d
      - collector
      - jaeger
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 5s
      timeout: 2s
      retries: 5

  collector:
    image: otel/opentelemetry-collector-contrib:latest
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    command: ["--config=/etc/otel-collector-config.yaml"]
    ports:
      - "4318:4318"
      - "9464:9464"


  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "4317:4317"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:16686/"]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/"]
      interval: 10s
      timeout: 5s
      retries: 5

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 10s
      timeout: 5s
      retries: 5
